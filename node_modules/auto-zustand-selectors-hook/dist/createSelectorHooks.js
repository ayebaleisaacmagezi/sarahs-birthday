import { useStore } from 'zustand';
import { useShallow } from 'zustand/react/shallow';
var capitalize = function (s) { return s.charAt(0).toUpperCase() + s.slice(1); };
export function createSelectorHooks(store) {
    var storeIn = store;
    Object.keys(storeIn.getState()).forEach(function (key) {
        var selector = function (state) { return state[key]; };
        storeIn["use".concat(capitalize(key))] =
            typeof storeIn === 'function'
                ? function () { return storeIn(useShallow(selector)); }
                : function () { return useStore(storeIn, useShallow(selector)); };
    });
    return storeIn;
}
//# sourceMappingURL=createSelectorHooks.js.map